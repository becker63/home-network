"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

schema ValuesSchema:
    r"""
    ValuesSchema

    Attributes
    ----------
    global : ValuesSchemaGlobal, required
    namespaceOverride : str, required
    kubeVersion : any, required
    config : ValuesSchemaConfig, required
    alphaConfig : ValuesSchemaAlphaConfig, required
    image : ValuesSchemaImage, required
    imagePullSecrets : any, required
    extraArgs : ValuesSchemaExtraArgs, required
    extraEnv : any, required
    envFrom : any, required
    customLabels : ValuesSchemaCustomLabels, required
    authenticatedEmailsFile : ValuesSchemaAuthenticatedEmailsFile, required
    service : ValuesSchemaService, required
    serviceAccount : ValuesSchemaServiceAccount, required
    ingress : ValuesSchemaIngress, required
    resources : ValuesSchemaResources, required
    extraVolumes : any, required
    extraVolumeMounts : any, required
    extraContainers : any, required
    extraInitContainers : any, required
    priorityClassName : str, required
    hostAliases : any, required
    tolerations : any, required
    nodeSelector : ValuesSchemaNodeSelector, required
    proxyVarsAsSecrets : bool, required
    livenessProbe : ValuesSchemaLivenessProbe, required
    readinessProbe : ValuesSchemaReadinessProbe, required
    securityContext : ValuesSchemaSecurityContext, required
    deploymentAnnotations : ValuesSchemaDeploymentAnnotations, required
    podAnnotations : ValuesSchemaPodAnnotations, required
    podLabels : ValuesSchemaPodLabels, required
    replicaCount : int, required
    revisionHistoryLimit : int, required
    strategy : ValuesSchemaStrategy, required
    enableServiceLinks : bool, required
    podDisruptionBudget : ValuesSchemaPodDisruptionBudget, required
    autoscaling : ValuesSchemaAutoscaling, required
    podSecurityContext : ValuesSchemaPodSecurityContext, required
    httpScheme : str, required
    initContainers : ValuesSchemaInitContainers, required
    htpasswdFile : ValuesSchemaHtpasswdFile, required
    sessionStorage : ValuesSchemaSessionStorage, required
    redis : ValuesSchemaRedis, required
    checkDeprecation : bool, required
    metrics : ValuesSchemaMetrics, required
    extraObjects : any, required
    """

    global: ValuesSchemaGlobal
    namespaceOverride: str
    kubeVersion: any
    config: ValuesSchemaConfig
    alphaConfig: ValuesSchemaAlphaConfig
    image: ValuesSchemaImage
    imagePullSecrets: any
    extraArgs: ValuesSchemaExtraArgs
    extraEnv: any
    envFrom: any
    customLabels: ValuesSchemaCustomLabels
    authenticatedEmailsFile: ValuesSchemaAuthenticatedEmailsFile
    service: ValuesSchemaService
    serviceAccount: ValuesSchemaServiceAccount
    ingress: ValuesSchemaIngress
    resources: ValuesSchemaResources
    extraVolumes: any
    extraVolumeMounts: any
    extraContainers: any
    extraInitContainers: any
    priorityClassName: str
    hostAliases: any
    tolerations: any
    nodeSelector: ValuesSchemaNodeSelector
    proxyVarsAsSecrets: bool
    livenessProbe: ValuesSchemaLivenessProbe
    readinessProbe: ValuesSchemaReadinessProbe
    securityContext: ValuesSchemaSecurityContext
    deploymentAnnotations: ValuesSchemaDeploymentAnnotations
    podAnnotations: ValuesSchemaPodAnnotations
    podLabels: ValuesSchemaPodLabels
    replicaCount: int
    revisionHistoryLimit: int
    strategy: ValuesSchemaStrategy
    enableServiceLinks: bool
    podDisruptionBudget: ValuesSchemaPodDisruptionBudget
    autoscaling: ValuesSchemaAutoscaling
    podSecurityContext: ValuesSchemaPodSecurityContext
    httpScheme: str
    initContainers: ValuesSchemaInitContainers
    htpasswdFile: ValuesSchemaHtpasswdFile
    sessionStorage: ValuesSchemaSessionStorage
    redis: ValuesSchemaRedis
    checkDeprecation: bool
    metrics: ValuesSchemaMetrics
    extraObjects: any

schema ValuesSchemaAlphaConfig:
    r"""
    ValuesSchemaAlphaConfig

    Attributes
    ----------
    enabled : bool, required
    annotations : ValuesSchemaAlphaConfigAnnotations, required
    serverConfigData : ValuesSchemaAlphaConfigServerConfigData, required
    metricsConfigData : ValuesSchemaAlphaConfigMetricsConfigData, required
    configData : ValuesSchemaAlphaConfigConfigData, required
    configFile : str, required
    existingConfig : any, required
    existingSecret : any, required
    """

    enabled: bool
    annotations: ValuesSchemaAlphaConfigAnnotations
    serverConfigData: ValuesSchemaAlphaConfigServerConfigData
    metricsConfigData: ValuesSchemaAlphaConfigMetricsConfigData
    configData: ValuesSchemaAlphaConfigConfigData
    configFile: str
    existingConfig: any
    existingSecret: any

schema ValuesSchemaAlphaConfigAnnotations:
    r"""
    ValuesSchemaAlphaConfigAnnotations
    """

    [...str]: any

schema ValuesSchemaAlphaConfigConfigData:
    r"""
    ValuesSchemaAlphaConfigConfigData
    """

    [...str]: any

schema ValuesSchemaAlphaConfigMetricsConfigData:
    r"""
    ValuesSchemaAlphaConfigMetricsConfigData
    """

    [...str]: any

schema ValuesSchemaAlphaConfigServerConfigData:
    r"""
    ValuesSchemaAlphaConfigServerConfigData
    """

    [...str]: any

schema ValuesSchemaAuthenticatedEmailsFile:
    r"""
    ValuesSchemaAuthenticatedEmailsFile

    Attributes
    ----------
    enabled : bool, required
    persistence : str, required
    template : str, required
    restrictedUserAccessKey : str, required
    restricted_access : str, required
    annotations : ValuesSchemaAuthenticatedEmailsFileAnnotations, required
    """

    enabled: bool
    persistence: str
    template: str
    restrictedUserAccessKey: str
    restricted_access: str
    annotations: ValuesSchemaAuthenticatedEmailsFileAnnotations

schema ValuesSchemaAuthenticatedEmailsFileAnnotations:
    r"""
    ValuesSchemaAuthenticatedEmailsFileAnnotations
    """

    [...str]: any

schema ValuesSchemaAutoscaling:
    r"""
    ValuesSchemaAutoscaling

    Attributes
    ----------
    enabled : bool, required
    minReplicas : int, required
    maxReplicas : int, required
    targetCPUUtilizationPercentage : int, required
    annotations : ValuesSchemaAutoscalingAnnotations, required
    """

    enabled: bool
    minReplicas: int
    maxReplicas: int
    targetCPUUtilizationPercentage: int
    annotations: ValuesSchemaAutoscalingAnnotations

schema ValuesSchemaAutoscalingAnnotations:
    r"""
    ValuesSchemaAutoscalingAnnotations
    """

    [...str]: any

schema ValuesSchemaConfig:
    r"""
    ValuesSchemaConfig

    Attributes
    ----------
    annotations : ValuesSchemaConfigAnnotations, required
    clientID : str, required
    clientSecret : str, required
    cookieSecret : str, required
    cookieName : str, required
    google : ValuesSchemaConfigGoogle, required
    configFile : str, required
    """

    annotations: ValuesSchemaConfigAnnotations
    clientID: str
    clientSecret: str
    cookieSecret: str
    cookieName: str
    google: ValuesSchemaConfigGoogle
    configFile: str

schema ValuesSchemaConfigAnnotations:
    r"""
    ValuesSchemaConfigAnnotations
    """

    [...str]: any

schema ValuesSchemaConfigGoogle:
    r"""
    ValuesSchemaConfigGoogle
    """

    [...str]: any

schema ValuesSchemaCustomLabels:
    r"""
    ValuesSchemaCustomLabels
    """

    [...str]: any

schema ValuesSchemaDeploymentAnnotations:
    r"""
    ValuesSchemaDeploymentAnnotations
    """

    [...str]: any

schema ValuesSchemaExtraArgs:
    r"""
    ValuesSchemaExtraArgs
    """

    [...str]: any

schema ValuesSchemaGlobal:
    r"""
    ValuesSchemaGlobal
    """

    [...str]: any

schema ValuesSchemaHtpasswdFile:
    r"""
    ValuesSchemaHtpasswdFile

    Attributes
    ----------
    enabled : bool, required
    existingSecret : str, required
    entries : any, required
    """

    enabled: bool
    existingSecret: str
    entries: any

schema ValuesSchemaImage:
    r"""
    ValuesSchemaImage

    Attributes
    ----------
    repository : str, required
    tag : str, required
    pullPolicy : str, required
    command : any, required
    """

    repository: str
    tag: str
    pullPolicy: str
    command: any

schema ValuesSchemaIngress:
    r"""
    ValuesSchemaIngress

    Attributes
    ----------
    enabled : bool, required
    path : str, required
    pathType : str, required
    labels : ValuesSchemaIngressLabels, required
    """

    enabled: bool
    path: str
    pathType: str
    labels: ValuesSchemaIngressLabels

schema ValuesSchemaIngressLabels:
    r"""
    ValuesSchemaIngressLabels
    """

    [...str]: any

schema ValuesSchemaInitContainers:
    r"""
    ValuesSchemaInitContainers

    Attributes
    ----------
    waitForRedis : ValuesSchemaInitContainersWaitForRedis, required
    """

    waitForRedis: ValuesSchemaInitContainersWaitForRedis

schema ValuesSchemaInitContainersWaitForRedis:
    r"""
    ValuesSchemaInitContainersWaitForRedis

    Attributes
    ----------
    enabled : bool, required
    image : ValuesSchemaInitContainersWaitForRedisImage, required
    kubectlVersion : str, required
    securityContext : ValuesSchemaInitContainersWaitForRedisSecurityContext, required
    timeout : int, required
    resources : ValuesSchemaInitContainersWaitForRedisResources, required
    """

    enabled: bool
    image: ValuesSchemaInitContainersWaitForRedisImage
    kubectlVersion: str
    securityContext: ValuesSchemaInitContainersWaitForRedisSecurityContext
    timeout: int
    resources: ValuesSchemaInitContainersWaitForRedisResources

schema ValuesSchemaInitContainersWaitForRedisImage:
    r"""
    ValuesSchemaInitContainersWaitForRedisImage

    Attributes
    ----------
    repository : str, required
    tag : str, required
    pullPolicy : str, required
    """

    repository: str
    tag: str
    pullPolicy: str

schema ValuesSchemaInitContainersWaitForRedisResources:
    r"""
    ValuesSchemaInitContainersWaitForRedisResources
    """

    [...str]: any

schema ValuesSchemaInitContainersWaitForRedisSecurityContext:
    r"""
    ValuesSchemaInitContainersWaitForRedisSecurityContext

    Attributes
    ----------
    enabled : bool, required
    allowPrivilegeEscalation : bool, required
    capabilities : ValuesSchemaInitContainersWaitForRedisSecurityContextCapabilities, required
    readOnlyRootFilesystem : bool, required
    runAsNonRoot : bool, required
    runAsUser : int, required
    runAsGroup : int, required
    seccompProfile : ValuesSchemaInitContainersWaitForRedisSecurityContextSeccompProfile, required
    """

    enabled: bool
    allowPrivilegeEscalation: bool
    capabilities: ValuesSchemaInitContainersWaitForRedisSecurityContextCapabilities
    readOnlyRootFilesystem: bool
    runAsNonRoot: bool
    runAsUser: int
    runAsGroup: int
    seccompProfile: ValuesSchemaInitContainersWaitForRedisSecurityContextSeccompProfile

schema ValuesSchemaInitContainersWaitForRedisSecurityContextCapabilities:
    r"""
    ValuesSchemaInitContainersWaitForRedisSecurityContextCapabilities

    Attributes
    ----------
    drop : [str], required
    """

    drop: [str]

schema ValuesSchemaInitContainersWaitForRedisSecurityContextSeccompProfile:
    r"""
    ValuesSchemaInitContainersWaitForRedisSecurityContextSeccompProfile

    Attributes
    ----------
    $type : str, required
    """

    $type: str

schema ValuesSchemaLivenessProbe:
    r"""
    ValuesSchemaLivenessProbe

    Attributes
    ----------
    enabled : bool, required
    initialDelaySeconds : int, required
    timeoutSeconds : int, required
    """

    enabled: bool
    initialDelaySeconds: int
    timeoutSeconds: int

schema ValuesSchemaMetrics:
    r"""
    ValuesSchemaMetrics

    Attributes
    ----------
    enabled : bool, required
    port : int, required
    service : ValuesSchemaMetricsService, required
    serviceMonitor : ValuesSchemaMetricsServiceMonitor, required
    """

    enabled: bool
    port: int
    service: ValuesSchemaMetricsService
    serviceMonitor: ValuesSchemaMetricsServiceMonitor

schema ValuesSchemaMetricsService:
    r"""
    ValuesSchemaMetricsService

    Attributes
    ----------
    appProtocol : str, required
    """

    appProtocol: str

schema ValuesSchemaMetricsServiceMonitor:
    r"""
    ValuesSchemaMetricsServiceMonitor

    Attributes
    ----------
    enabled : bool, required
    namespace : str, required
    prometheusInstance : str, required
    interval : str, required
    scrapeTimeout : str, required
    labels : ValuesSchemaMetricsServiceMonitorLabels, required
    scheme : str, required
    tlsConfig : ValuesSchemaMetricsServiceMonitorTlsConfig, required
    bearerTokenFile : str, required
    annotations : ValuesSchemaMetricsServiceMonitorAnnotations, required
    metricRelabelings : any, required
    relabelings : any, required
    """

    enabled: bool
    namespace: str
    prometheusInstance: str
    interval: str
    scrapeTimeout: str
    labels: ValuesSchemaMetricsServiceMonitorLabels
    scheme: str
    tlsConfig: ValuesSchemaMetricsServiceMonitorTlsConfig
    bearerTokenFile: str
    annotations: ValuesSchemaMetricsServiceMonitorAnnotations
    metricRelabelings: any
    relabelings: any

schema ValuesSchemaMetricsServiceMonitorAnnotations:
    r"""
    ValuesSchemaMetricsServiceMonitorAnnotations
    """

    [...str]: any

schema ValuesSchemaMetricsServiceMonitorLabels:
    r"""
    ValuesSchemaMetricsServiceMonitorLabels
    """

    [...str]: any

schema ValuesSchemaMetricsServiceMonitorTlsConfig:
    r"""
    ValuesSchemaMetricsServiceMonitorTlsConfig
    """

    [...str]: any

schema ValuesSchemaNodeSelector:
    r"""
    ValuesSchemaNodeSelector
    """

    [...str]: any

schema ValuesSchemaPodAnnotations:
    r"""
    ValuesSchemaPodAnnotations
    """

    [...str]: any

schema ValuesSchemaPodDisruptionBudget:
    r"""
    ValuesSchemaPodDisruptionBudget

    Attributes
    ----------
    enabled : bool, required
    minAvailable : int, required
    """

    enabled: bool
    minAvailable: int

schema ValuesSchemaPodLabels:
    r"""
    ValuesSchemaPodLabels
    """

    [...str]: any

schema ValuesSchemaPodSecurityContext:
    r"""
    ValuesSchemaPodSecurityContext
    """

    [...str]: any

schema ValuesSchemaReadinessProbe:
    r"""
    ValuesSchemaReadinessProbe

    Attributes
    ----------
    enabled : bool, required
    initialDelaySeconds : int, required
    timeoutSeconds : int, required
    periodSeconds : int, required
    successThreshold : int, required
    """

    enabled: bool
    initialDelaySeconds: int
    timeoutSeconds: int
    periodSeconds: int
    successThreshold: int

schema ValuesSchemaRedis:
    r"""
    ValuesSchemaRedis

    Attributes
    ----------
    enabled : bool, required
    """

    enabled: bool

schema ValuesSchemaResources:
    r"""
    ValuesSchemaResources
    """

    [...str]: any

schema ValuesSchemaSecurityContext:
    r"""
    ValuesSchemaSecurityContext

    Attributes
    ----------
    enabled : bool, required
    allowPrivilegeEscalation : bool, required
    capabilities : ValuesSchemaSecurityContextCapabilities, required
    readOnlyRootFilesystem : bool, required
    runAsNonRoot : bool, required
    runAsUser : int, required
    runAsGroup : int, required
    seccompProfile : ValuesSchemaSecurityContextSeccompProfile, required
    """

    enabled: bool
    allowPrivilegeEscalation: bool
    capabilities: ValuesSchemaSecurityContextCapabilities
    readOnlyRootFilesystem: bool
    runAsNonRoot: bool
    runAsUser: int
    runAsGroup: int
    seccompProfile: ValuesSchemaSecurityContextSeccompProfile

schema ValuesSchemaSecurityContextCapabilities:
    r"""
    ValuesSchemaSecurityContextCapabilities

    Attributes
    ----------
    drop : [str], required
    """

    drop: [str]

schema ValuesSchemaSecurityContextSeccompProfile:
    r"""
    ValuesSchemaSecurityContextSeccompProfile

    Attributes
    ----------
    $type : str, required
    """

    $type: str

schema ValuesSchemaService:
    r"""
    ValuesSchemaService

    Attributes
    ----------
    $type : str, required
    portNumber : int, required
    appProtocol : str, required
    annotations : ValuesSchemaServiceAnnotations, required
    externalTrafficPolicy : str, required
    internalTrafficPolicy : str, required
    targetPort : str, required
    """

    $type: str
    portNumber: int
    appProtocol: str
    annotations: ValuesSchemaServiceAnnotations
    externalTrafficPolicy: str
    internalTrafficPolicy: str
    targetPort: str

schema ValuesSchemaServiceAccount:
    r"""
    ValuesSchemaServiceAccount

    Attributes
    ----------
    enabled : bool, required
    name : any, required
    automountServiceAccountToken : bool, required
    annotations : ValuesSchemaServiceAccountAnnotations, required
    """

    enabled: bool
    name: any
    automountServiceAccountToken: bool
    annotations: ValuesSchemaServiceAccountAnnotations

schema ValuesSchemaServiceAccountAnnotations:
    r"""
    ValuesSchemaServiceAccountAnnotations
    """

    [...str]: any

schema ValuesSchemaServiceAnnotations:
    r"""
    ValuesSchemaServiceAnnotations
    """

    [...str]: any

schema ValuesSchemaSessionStorage:
    r"""
    ValuesSchemaSessionStorage

    Attributes
    ----------
    $type : str, required
    redis : ValuesSchemaSessionStorageRedis, required
    """

    $type: str
    redis: ValuesSchemaSessionStorageRedis

schema ValuesSchemaSessionStorageRedis:
    r"""
    ValuesSchemaSessionStorageRedis

    Attributes
    ----------
    existingSecret : str, required
    password : str, required
    passwordKey : str, required
    clientType : str, required
    standalone : ValuesSchemaSessionStorageRedisStandalone, required
    cluster : ValuesSchemaSessionStorageRedisCluster, required
    sentinel : ValuesSchemaSessionStorageRedisSentinel, required
    """

    existingSecret: str
    password: str
    passwordKey: str
    clientType: str
    standalone: ValuesSchemaSessionStorageRedisStandalone
    cluster: ValuesSchemaSessionStorageRedisCluster
    sentinel: ValuesSchemaSessionStorageRedisSentinel

schema ValuesSchemaSessionStorageRedisCluster:
    r"""
    ValuesSchemaSessionStorageRedisCluster

    Attributes
    ----------
    connectionUrls : any, required
    """

    connectionUrls: any

schema ValuesSchemaSessionStorageRedisSentinel:
    r"""
    ValuesSchemaSessionStorageRedisSentinel

    Attributes
    ----------
    existingSecret : str, required
    password : str, required
    passwordKey : str, required
    masterName : str, required
    connectionUrls : any, required
    """

    existingSecret: str
    password: str
    passwordKey: str
    masterName: str
    connectionUrls: any

schema ValuesSchemaSessionStorageRedisStandalone:
    r"""
    ValuesSchemaSessionStorageRedisStandalone

    Attributes
    ----------
    connectionUrl : str, required
    """

    connectionUrl: str

schema ValuesSchemaStrategy:
    r"""
    ValuesSchemaStrategy
    """

    [...str]: any

