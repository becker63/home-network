slug: github-oidc-secret
keys:
  GITHUB_OIDC_CLIENT_ID: clientID
  GITHUB_OIDC_CLIENT_SECRET: clientSecret
namespace: default
envSlug: prod
tokenSecretName: infisical-token
tokenSecretNamespace: default
basePath: /github-oidc-secret
secretsPath: /github-oidc-secret
secret:
  apiVersion: secrets.infisical.com/v1alpha1
  kind: InfisicalSecret
  metadata:
    name: github-oidc-secret
    namespace: default
  spec:
    authentication:
      serviceToken:
        secretsScope:
          envSlug: prod
          recursive: false
          secretsPath: /github-oidc-secret
        serviceTokenSecretReference:
          secretName: infisical-token
          secretNamespace: default
    managedKubeSecretReferences:
    - creationPolicy: Orphan
      secretName: github-oidc-secret
      secretNamespace: default
      secretType: Opaque
      template:
        data:
          clientID: '{{ .GITHUB_OIDC_CLIENT_ID.Value }}'
          clientSecret: '{{ .GITHUB_OIDC_CLIENT_SECRET.Value }}'
        includeAllSecrets: false
    resyncInterval: 60
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: auth-forward
  namespace: default
spec:
  forwardAuth:
    address: http://oauth2-proxy.default.svc.cluster.local:4180
    authResponseHeaders:
    - X-Auth-Request-User
    - X-Auth-Request-Email
    - X-Auth-Request-Groups
    trustForwardHeader: true
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: headlamp-websecure
  namespace: default
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: Host(`headlamp.example.com`)
    middlewares:
    - name: auth-forward
      namespace: default
    services:
    - name: headlamp
      port: 80
  tls:
    secretName: headlamp-tls
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: headlamp-cert
  namespace: default
spec:
  dnsNames:
  - headlamp.example.com
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt-prod
  secretName: headlamp-tls