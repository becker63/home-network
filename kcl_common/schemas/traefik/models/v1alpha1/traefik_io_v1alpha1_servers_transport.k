"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema ServersTransport:
    r"""
    ServersTransport is the CRD implementation of a ServersTransport.
    If no serversTransport is specified, the default@internal will be used.
    The default@internal serversTransport is created from the static configuration.
    More info: https://doc.traefik.io/traefik/v3.4/routing/services/#serverstransport_1

    Attributes
    ----------
    apiVersion : str, default is "traefik.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ServersTransport", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, required
        metadata
    spec : TraefikIoV1alpha1ServersTransportSpec, default is Undefined, required
        spec
    """


    apiVersion: "traefik.io/v1alpha1" = "traefik.io/v1alpha1"

    kind: "ServersTransport" = "ServersTransport"

    metadata: v1.ObjectMeta

    spec: TraefikIoV1alpha1ServersTransportSpec


schema TraefikIoV1alpha1ServersTransportSpec:
    r"""
    ServersTransportSpec defines the desired state of a ServersTransport.

    Attributes
    ----------
    certificatesSecrets : [str], default is Undefined, optional
        CertificatesSecrets defines a list of secret storing client certificates for mTLS.
    disableHTTP2 : bool, default is Undefined, optional
        DisableHTTP2 disables HTTP/2 for connections with backend servers.
    forwardingTimeouts : TraefikIoV1alpha1ServersTransportSpecForwardingTimeouts, default is Undefined, optional
        forwarding timeouts
    insecureSkipVerify : bool, default is Undefined, optional
        InsecureSkipVerify disables SSL certificate verification.
    maxIdleConnsPerHost : int, default is Undefined, optional
        MaxIdleConnsPerHost controls the maximum idle (keep-alive) to keep per-host.
    peerCertURI : str, default is Undefined, optional
        PeerCertURI defines the peer cert URI used to match against SAN URI during the peer certificate verification.
    rootCAs : [TraefikIoV1alpha1ServersTransportSpecRootCAsItems0], default is Undefined, optional
        RootCAs defines a list of CA certificate Secrets or ConfigMaps used to validate server certificates.
    rootCAsSecrets : [str], default is Undefined, optional
        RootCAsSecrets defines a list of CA secret used to validate self-signed certificate.
        Deprecated: RootCAsSecrets is deprecated, please use the RootCAs option instead.
    serverName : str, default is Undefined, optional
        ServerName defines the server name used to contact the server.
    spiffe : TraefikIoV1alpha1ServersTransportSpecSpiffe, default is Undefined, optional
        spiffe
    """


    certificatesSecrets?: [str]

    disableHTTP2?: bool

    forwardingTimeouts?: TraefikIoV1alpha1ServersTransportSpecForwardingTimeouts

    insecureSkipVerify?: bool

    maxIdleConnsPerHost?: int

    peerCertURI?: str

    rootCAs?: [TraefikIoV1alpha1ServersTransportSpecRootCAsItems0]

    rootCAsSecrets?: [str]

    serverName?: str

    spiffe?: TraefikIoV1alpha1ServersTransportSpecSpiffe


    check:
        maxIdleConnsPerHost >= 0 if maxIdleConnsPerHost not in [None, Undefined]


schema TraefikIoV1alpha1ServersTransportSpecForwardingTimeouts:
    r"""
    ForwardingTimeouts defines the timeouts for requests forwarded to the backend servers.

    Attributes
    ----------
    dialTimeout : int | str, default is Undefined, optional
        DialTimeout is the amount of time to wait until a connection to a backend server can be established.
    idleConnTimeout : int | str, default is Undefined, optional
        IdleConnTimeout is the maximum period for which an idle HTTP keep-alive connection will remain open before closing itself.
    pingTimeout : int | str, default is Undefined, optional
        PingTimeout is the timeout after which the HTTP/2 connection will be closed if a response to ping is not received.
    readIdleTimeout : int | str, default is Undefined, optional
        ReadIdleTimeout is the timeout after which a health check using ping frame will be carried out if no frame is received on the HTTP/2 connection.
    responseHeaderTimeout : int | str, default is Undefined, optional
        ResponseHeaderTimeout is the amount of time to wait for a server's response headers after fully writing the request (including its body, if any).
    """


    dialTimeout?: int | str

    idleConnTimeout?: int | str

    pingTimeout?: int | str

    readIdleTimeout?: int | str

    responseHeaderTimeout?: int | str


    check:
        _regex_match(str(dialTimeout), r"^([0-9]+(ns|us|µs|ms|s|m|h)?)+$") if dialTimeout
        _regex_match(str(idleConnTimeout), r"^([0-9]+(ns|us|µs|ms|s|m|h)?)+$") if idleConnTimeout
        _regex_match(str(pingTimeout), r"^([0-9]+(ns|us|µs|ms|s|m|h)?)+$") if pingTimeout
        _regex_match(str(readIdleTimeout), r"^([0-9]+(ns|us|µs|ms|s|m|h)?)+$") if readIdleTimeout
        _regex_match(str(responseHeaderTimeout), r"^([0-9]+(ns|us|µs|ms|s|m|h)?)+$") if responseHeaderTimeout


schema TraefikIoV1alpha1ServersTransportSpecRootCAsItems0:
    r"""
    RootCA defines a reference to a Secret or a ConfigMap that holds a CA certificate.
    If both a Secret and a ConfigMap reference are defined, the Secret reference takes precedence.

    Attributes
    ----------
    configMap : str, default is Undefined, optional
        ConfigMap defines the name of a ConfigMap that holds a CA certificate.
        The referenced ConfigMap must contain a certificate under either a tls.ca or a ca.crt key.
    secret : str, default is Undefined, optional
        Secret defines the name of a Secret that holds a CA certificate.
        The referenced Secret must contain a certificate under either a tls.ca or a ca.crt key.
    """


    configMap?: str

    secret?: str


schema TraefikIoV1alpha1ServersTransportSpecSpiffe:
    r"""
    Spiffe defines the SPIFFE configuration.

    Attributes
    ----------
    ids : [str], default is Undefined, optional
        IDs defines the allowed SPIFFE IDs (takes precedence over the SPIFFE TrustDomain).
    trustDomain : str, default is Undefined, optional
        TrustDomain defines the allowed SPIFFE trust domain.
    """


    ids?: [str]

    trustDomain?: str


