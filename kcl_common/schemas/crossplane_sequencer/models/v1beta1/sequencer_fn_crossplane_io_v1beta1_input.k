"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Input:
    r"""
    Input can be used to provide input to this Function.

    Attributes
    ----------
    apiVersion : str, default is "sequencer.fn.crossplane.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Input", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    rules : [SequencerFnCrossplaneIoV1beta1InputRulesItems0], default is Undefined, required
        Rules is a list of rules that describe sequences of resources.
    """


    apiVersion: "sequencer.fn.crossplane.io/v1beta1" = "sequencer.fn.crossplane.io/v1beta1"

    kind: "Input" = "Input"

    metadata?: v1.ObjectMeta

    rules: [SequencerFnCrossplaneIoV1beta1InputRulesItems0]


schema SequencerFnCrossplaneIoV1beta1InputRulesItems0:
    r"""
    SequencingRule is a rule that describes a sequence of resources.

    Attributes
    ----------
    sequence : [str], default is Undefined, optional
        TODO: Should we add a way to infer sequencing from usages? e.g. InferFromUsages: true InferFromUsages bool            `json:"inferFromUsages,omitempty"`
    """


    sequence?: [str]


