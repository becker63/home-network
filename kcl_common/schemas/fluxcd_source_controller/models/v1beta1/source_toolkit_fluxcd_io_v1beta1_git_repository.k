"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema GitRepository:
    r"""
    GitRepository is the Schema for the gitrepositories API

    Attributes
    ----------
    apiVersion : str, default is "source.toolkit.fluxcd.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "GitRepository", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SourceToolkitFluxcdIoV1beta1GitRepositorySpec, default is Undefined, optional
        spec
    status : SourceToolkitFluxcdIoV1beta1GitRepositoryStatus, default is Undefined, optional
        status
    """


    apiVersion: "source.toolkit.fluxcd.io/v1beta1" = "source.toolkit.fluxcd.io/v1beta1"

    kind: "GitRepository" = "GitRepository"

    metadata?: v1.ObjectMeta

    spec?: SourceToolkitFluxcdIoV1beta1GitRepositorySpec

    status?: SourceToolkitFluxcdIoV1beta1GitRepositoryStatus


schema SourceToolkitFluxcdIoV1beta1GitRepositorySpec:
    r"""
    GitRepositorySpec defines the desired state of a Git repository.

    Attributes
    ----------
    accessFrom : SourceToolkitFluxcdIoV1beta1GitRepositorySpecAccessFrom, default is Undefined, optional
        access from
    gitImplementation : str, default is "go-git", optional
        Determines which git client library to use.
        Defaults to go-git, valid values are ('go-git', 'libgit2').
    ignore : str, default is Undefined, optional
        Ignore overrides the set of excluded patterns in the .sourceignore format
        (which is the same as .gitignore). If not provided, a default will be used,
        consult the documentation for your version to find out what those are.
    include : [SourceToolkitFluxcdIoV1beta1GitRepositorySpecIncludeItems0], default is Undefined, optional
        Extra git repositories to map into the repository
    interval : str, default is Undefined, required
        The interval at which to check for repository updates.
    recurseSubmodules : bool, default is Undefined, optional
        When enabled, after the clone is created, initializes all submodules within,
        using their default settings.
        This option is available only when using the 'go-git' GitImplementation.
    ref : SourceToolkitFluxcdIoV1beta1GitRepositorySpecRef, default is Undefined, optional
        ref
    secretRef : SourceToolkitFluxcdIoV1beta1GitRepositorySpecSecretRef, default is Undefined, optional
        secret ref
    suspend : bool, default is Undefined, optional
        This flag tells the controller to suspend the reconciliation of this source.
    timeout : str, default is "60s", optional
        The timeout for remote Git operations like cloning, defaults to 60s.
    url : str, default is Undefined, required
        The repository URL, can be a HTTP/S or SSH address.
    verify : SourceToolkitFluxcdIoV1beta1GitRepositorySpecVerify, default is Undefined, optional
        verify
    """


    accessFrom?: SourceToolkitFluxcdIoV1beta1GitRepositorySpecAccessFrom

    gitImplementation?: "go-git" | "libgit2" = "go-git"

    ignore?: str

    include?: [SourceToolkitFluxcdIoV1beta1GitRepositorySpecIncludeItems0]

    interval: str

    recurseSubmodules?: bool

    ref?: SourceToolkitFluxcdIoV1beta1GitRepositorySpecRef

    secretRef?: SourceToolkitFluxcdIoV1beta1GitRepositorySpecSecretRef

    suspend?: bool

    timeout?: str = "60s"

    url: str

    verify?: SourceToolkitFluxcdIoV1beta1GitRepositorySpecVerify


    check:
        _regex_match(str(url), r"^(http|https|ssh)://.*$")


schema SourceToolkitFluxcdIoV1beta1GitRepositorySpecAccessFrom:
    r"""
    AccessFrom defines an Access Control List for allowing cross-namespace references to this object.

    Attributes
    ----------
    namespaceSelectors : [SourceToolkitFluxcdIoV1beta1GitRepositorySpecAccessFromNamespaceSelectorsItems0], default is Undefined, required
        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
        Items in this list are evaluated using a logical OR operation.
    """


    namespaceSelectors: [SourceToolkitFluxcdIoV1beta1GitRepositorySpecAccessFromNamespaceSelectorsItems0]


schema SourceToolkitFluxcdIoV1beta1GitRepositorySpecAccessFromNamespaceSelectorsItems0:
    r"""
    NamespaceSelector selects the namespaces to which this ACL applies.
    An empty map of MatchLabels matches all namespaces in a cluster.

    Attributes
    ----------
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchLabels?: {str:str}


schema SourceToolkitFluxcdIoV1beta1GitRepositorySpecIncludeItems0:
    r"""
    GitRepositoryInclude defines a source with a from and to path.

    Attributes
    ----------
    fromPath : str, default is Undefined, optional
        The path to copy contents from, defaults to the root directory.
    repository : SourceToolkitFluxcdIoV1beta1GitRepositorySpecIncludeItems0Repository, default is Undefined, required
        repository
    toPath : str, default is Undefined, optional
        The path to copy contents to, defaults to the name of the source ref.
    """


    fromPath?: str

    repository: SourceToolkitFluxcdIoV1beta1GitRepositorySpecIncludeItems0Repository

    toPath?: str


schema SourceToolkitFluxcdIoV1beta1GitRepositorySpecIncludeItems0Repository:
    r"""
    Reference to a GitRepository to include.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referent.
    """


    name: str


schema SourceToolkitFluxcdIoV1beta1GitRepositorySpecRef:
    r"""
    The Git reference to checkout and monitor for changes, defaults to
    master branch.

    Attributes
    ----------
    branch : str, default is Undefined, optional
        The Git branch to checkout, defaults to master.
    commit : str, default is Undefined, optional
        The Git commit SHA to checkout, if specified Tag filters will be ignored.
    semver : str, default is Undefined, optional
        The Git tag semver expression, takes precedence over Tag.
    tag : str, default is Undefined, optional
        The Git tag to checkout, takes precedence over Branch.
    """


    branch?: str

    commit?: str

    semver?: str

    tag?: str


schema SourceToolkitFluxcdIoV1beta1GitRepositorySpecSecretRef:
    r"""
    The secret name containing the Git credentials.
    For HTTPS repositories the secret must contain username and password
    fields.
    For SSH repositories the secret must contain identity and known_hosts
    fields.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referent.
    """


    name: str


schema SourceToolkitFluxcdIoV1beta1GitRepositorySpecVerify:
    r"""
    Verify OpenPGP signature for the Git commit HEAD points to.

    Attributes
    ----------
    mode : str, default is Undefined, required
        Mode describes what git object should be verified, currently ('head').
    secretRef : SourceToolkitFluxcdIoV1beta1GitRepositorySpecVerifySecretRef, default is Undefined, optional
        secret ref
    """


    mode: "head"

    secretRef?: SourceToolkitFluxcdIoV1beta1GitRepositorySpecVerifySecretRef


schema SourceToolkitFluxcdIoV1beta1GitRepositorySpecVerifySecretRef:
    r"""
    The secret name containing the public keys of all trusted Git authors.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referent.
    """


    name: str


schema SourceToolkitFluxcdIoV1beta1GitRepositoryStatus:
    r"""
    GitRepositoryStatus defines the observed state of a Git repository.

    Attributes
    ----------
    artifact : SourceToolkitFluxcdIoV1beta1GitRepositoryStatusArtifact, default is Undefined, optional
        artifact
    conditions : [SourceToolkitFluxcdIoV1beta1GitRepositoryStatusConditionsItems0], default is Undefined, optional
        Conditions holds the conditions for the GitRepository.
    includedArtifacts : [SourceToolkitFluxcdIoV1beta1GitRepositoryStatusIncludedArtifactsItems0], default is Undefined, optional
        IncludedArtifacts represents the included artifacts from the last successful repository sync.
    lastHandledReconcileAt : str, default is Undefined, optional
        LastHandledReconcileAt holds the value of the most recent
        reconcile request value, so a change of the annotation value
        can be detected.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the last observed generation.
    url : str, default is Undefined, optional
        URL is the download link for the artifact output of the last repository
        sync.
    """


    artifact?: SourceToolkitFluxcdIoV1beta1GitRepositoryStatusArtifact

    conditions?: [SourceToolkitFluxcdIoV1beta1GitRepositoryStatusConditionsItems0]

    includedArtifacts?: [SourceToolkitFluxcdIoV1beta1GitRepositoryStatusIncludedArtifactsItems0]

    lastHandledReconcileAt?: str

    observedGeneration?: int

    url?: str


schema SourceToolkitFluxcdIoV1beta1GitRepositoryStatusArtifact:
    r"""
    Artifact represents the output of the last successful repository sync.

    Attributes
    ----------
    checksum : str, default is Undefined, optional
        Checksum is the SHA256 checksum of the artifact.
    lastUpdateTime : str, default is Undefined, required
        LastUpdateTime is the timestamp corresponding to the last update of this
        artifact.
    path : str, default is Undefined, required
        Path is the relative file path of this artifact.
    revision : str, default is Undefined, optional
        Revision is a human readable identifier traceable in the origin source
        system. It can be a Git commit SHA, Git tag, a Helm index timestamp, a Helm
        chart version, etc.
    url : str, default is Undefined, required
        URL is the HTTP address of this artifact.
    """


    checksum?: str

    lastUpdateTime: str

    path: str

    revision?: str

    url: str


schema SourceToolkitFluxcdIoV1beta1GitRepositoryStatusConditionsItems0:
    r"""
    Condition contains details for one aspect of the current state of this API Resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition.
        This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition.
        Producers of specific condition types may define expected values and meanings for this field,
        and whether the values are considered a guaranteed API.
        The value should be a CamelCase string.
        This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0 if observedGeneration not in [None, Undefined]
        len(reason) <= 1024
        len(reason) >= 1
        _regex_match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        _regex_match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


schema SourceToolkitFluxcdIoV1beta1GitRepositoryStatusIncludedArtifactsItems0:
    r"""
    Artifact represents the output of a source synchronisation.

    Attributes
    ----------
    checksum : str, default is Undefined, optional
        Checksum is the SHA256 checksum of the artifact.
    lastUpdateTime : str, default is Undefined, required
        LastUpdateTime is the timestamp corresponding to the last update of this
        artifact.
    path : str, default is Undefined, required
        Path is the relative file path of this artifact.
    revision : str, default is Undefined, optional
        Revision is a human readable identifier traceable in the origin source
        system. It can be a Git commit SHA, Git tag, a Helm index timestamp, a Helm
        chart version, etc.
    url : str, default is Undefined, required
        URL is the HTTP address of this artifact.
    """


    checksum?: str

    lastUpdateTime: str

    path: str

    revision?: str

    url: str


