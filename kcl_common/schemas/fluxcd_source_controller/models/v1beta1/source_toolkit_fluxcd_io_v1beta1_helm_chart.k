"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema HelmChart:
    r"""
    HelmChart is the Schema for the helmcharts API

    Attributes
    ----------
    apiVersion : str, default is "source.toolkit.fluxcd.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "HelmChart", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SourceToolkitFluxcdIoV1beta1HelmChartSpec, default is Undefined, optional
        spec
    status : SourceToolkitFluxcdIoV1beta1HelmChartStatus, default is Undefined, optional
        status
    """


    apiVersion: "source.toolkit.fluxcd.io/v1beta1" = "source.toolkit.fluxcd.io/v1beta1"

    kind: "HelmChart" = "HelmChart"

    metadata?: v1.ObjectMeta

    spec?: SourceToolkitFluxcdIoV1beta1HelmChartSpec

    status?: SourceToolkitFluxcdIoV1beta1HelmChartStatus


schema SourceToolkitFluxcdIoV1beta1HelmChartSpec:
    r"""
    HelmChartSpec defines the desired state of a Helm chart.

    Attributes
    ----------
    accessFrom : SourceToolkitFluxcdIoV1beta1HelmChartSpecAccessFrom, default is Undefined, optional
        access from
    chart : str, default is Undefined, required
        The name or path the Helm chart is available at in the SourceRef.
    interval : str, default is Undefined, required
        The interval at which to check the Source for updates.
    reconcileStrategy : str, default is "ChartVersion", optional
        Determines what enables the creation of a new artifact. Valid values are
        ('ChartVersion', 'Revision').
        See the documentation of the values for an explanation on their behavior.
        Defaults to ChartVersion when omitted.
    sourceRef : SourceToolkitFluxcdIoV1beta1HelmChartSpecSourceRef, default is Undefined, required
        source ref
    suspend : bool, default is Undefined, optional
        This flag tells the controller to suspend the reconciliation of this source.
    valuesFile : str, default is Undefined, optional
        Alternative values file to use as the default chart values, expected to
        be a relative path in the SourceRef. Deprecated in favor of ValuesFiles,
        for backwards compatibility the file defined here is merged before the
        ValuesFiles items. Ignored when omitted.
    valuesFiles : [str], default is Undefined, optional
        Alternative list of values files to use as the chart values (values.yaml
        is not included by default), expected to be a relative path in the SourceRef.
        Values files are merged in the order of this list with the last file overriding
        the first. Ignored when omitted.
    version : str, default is "*", optional
        The chart version semver expression, ignored for charts from GitRepository
        and Bucket sources. Defaults to latest when omitted.
    """


    accessFrom?: SourceToolkitFluxcdIoV1beta1HelmChartSpecAccessFrom

    chart: str

    interval: str

    reconcileStrategy?: "ChartVersion" | "Revision" = "ChartVersion"

    sourceRef: SourceToolkitFluxcdIoV1beta1HelmChartSpecSourceRef

    suspend?: bool

    valuesFile?: str

    valuesFiles?: [str]

    version?: str = "*"


schema SourceToolkitFluxcdIoV1beta1HelmChartSpecAccessFrom:
    r"""
    AccessFrom defines an Access Control List for allowing cross-namespace references to this object.

    Attributes
    ----------
    namespaceSelectors : [SourceToolkitFluxcdIoV1beta1HelmChartSpecAccessFromNamespaceSelectorsItems0], default is Undefined, required
        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
        Items in this list are evaluated using a logical OR operation.
    """


    namespaceSelectors: [SourceToolkitFluxcdIoV1beta1HelmChartSpecAccessFromNamespaceSelectorsItems0]


schema SourceToolkitFluxcdIoV1beta1HelmChartSpecAccessFromNamespaceSelectorsItems0:
    r"""
    NamespaceSelector selects the namespaces to which this ACL applies.
    An empty map of MatchLabels matches all namespaces in a cluster.

    Attributes
    ----------
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchLabels?: {str:str}


schema SourceToolkitFluxcdIoV1beta1HelmChartSpecSourceRef:
    r"""
    The reference to the Source the chart is available at.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        APIVersion of the referent.
    kind : str, default is Undefined, required
        Kind of the referent, valid values are ('HelmRepository', 'GitRepository',
        'Bucket').
    name : str, default is Undefined, required
        Name of the referent.
    """


    apiVersion?: str

    kind: "HelmRepository" | "GitRepository" | "Bucket"

    name: str


schema SourceToolkitFluxcdIoV1beta1HelmChartStatus:
    r"""
    HelmChartStatus defines the observed state of the HelmChart.

    Attributes
    ----------
    artifact : SourceToolkitFluxcdIoV1beta1HelmChartStatusArtifact, default is Undefined, optional
        artifact
    conditions : [SourceToolkitFluxcdIoV1beta1HelmChartStatusConditionsItems0], default is Undefined, optional
        Conditions holds the conditions for the HelmChart.
    lastHandledReconcileAt : str, default is Undefined, optional
        LastHandledReconcileAt holds the value of the most recent
        reconcile request value, so a change of the annotation value
        can be detected.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the last observed generation.
    url : str, default is Undefined, optional
        URL is the download link for the last chart pulled.
    """


    artifact?: SourceToolkitFluxcdIoV1beta1HelmChartStatusArtifact

    conditions?: [SourceToolkitFluxcdIoV1beta1HelmChartStatusConditionsItems0]

    lastHandledReconcileAt?: str

    observedGeneration?: int

    url?: str


schema SourceToolkitFluxcdIoV1beta1HelmChartStatusArtifact:
    r"""
    Artifact represents the output of the last successful chart sync.

    Attributes
    ----------
    checksum : str, default is Undefined, optional
        Checksum is the SHA256 checksum of the artifact.
    lastUpdateTime : str, default is Undefined, required
        LastUpdateTime is the timestamp corresponding to the last update of this
        artifact.
    path : str, default is Undefined, required
        Path is the relative file path of this artifact.
    revision : str, default is Undefined, optional
        Revision is a human readable identifier traceable in the origin source
        system. It can be a Git commit SHA, Git tag, a Helm index timestamp, a Helm
        chart version, etc.
    url : str, default is Undefined, required
        URL is the HTTP address of this artifact.
    """


    checksum?: str

    lastUpdateTime: str

    path: str

    revision?: str

    url: str


schema SourceToolkitFluxcdIoV1beta1HelmChartStatusConditionsItems0:
    r"""
    Condition contains details for one aspect of the current state of this API Resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition.
        This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition.
        Producers of specific condition types may define expected values and meanings for this field,
        and whether the values are considered a guaranteed API.
        The value should be a CamelCase string.
        This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0 if observedGeneration not in [None, Undefined]
        len(reason) <= 1024
        len(reason) >= 1
        _regex_match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        _regex_match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


