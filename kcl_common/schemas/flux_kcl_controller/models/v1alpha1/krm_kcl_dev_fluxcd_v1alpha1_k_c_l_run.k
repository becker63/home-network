"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema KCLRun:
    r"""
    KCLRun is the Schema for the kclruns API

    Attributes
    ----------
    apiVersion : str, default is "krm.kcl.dev.fluxcd/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "KCLRun", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KrmKclDevFluxcdV1alpha1KCLRunSpec, default is Undefined, optional
        spec
    status : KrmKclDevFluxcdV1alpha1KCLRunStatus, default is Undefined, optional
        status
    """


    apiVersion: "krm.kcl.dev.fluxcd/v1alpha1" = "krm.kcl.dev.fluxcd/v1alpha1"

    kind: "KCLRun" = "KCLRun"

    metadata?: v1.ObjectMeta

    spec?: KrmKclDevFluxcdV1alpha1KCLRunSpec

    status?: KrmKclDevFluxcdV1alpha1KCLRunStatus


schema KrmKclDevFluxcdV1alpha1KCLRunSpec:
    r"""
    KCLRunSpec defines the desired state of KCLRun

    Attributes
    ----------
    argumentsReferences : [KrmKclDevFluxcdV1alpha1KCLRunSpecArgumentsReferencesItems0], default is Undefined, optional
        ConfigReference holds references to ConfigMaps and Secrets containing
        the KCL compile config. The ConfigMap and the Secret data keys represent the config names.
    commonMetadata : KrmKclDevFluxcdV1alpha1KCLRunSpecCommonMetadata, default is Undefined, optional
        common metadata
    config : KrmKclDevFluxcdV1alpha1KCLRunSpecConfig, default is Undefined, optional
        config
    dependsOn : [KrmKclDevFluxcdV1alpha1KCLRunSpecDependsOnItems0], default is Undefined, optional
        DependsOn may contain a meta.NamespacedObjectReference slice
        with references to Kustomization resources that must be ready before this
        Kustomization can be reconciled.
    force : bool, default is Undefined, optional
        Force instructs the controller to recreate resources
        when patching fails due to an immutable field change.
    healthChecks : [KrmKclDevFluxcdV1alpha1KCLRunSpecHealthChecksItems0], default is Undefined, optional
        A list of resources to be included in the health assessment.
    interval : str, default is Undefined, required
        The interval at which to reconcile the KCL Module.
        This interval is approximate and may be subject to jitter to ensure
        efficient use of resources.
    kubeConfig : KrmKclDevFluxcdV1alpha1KCLRunSpecKubeConfig, default is Undefined, optional
        kube config
    path : str, default is Undefined, optional
        Path to the directory containing the kcl.mod file.
        Defaults to 'None', which translates to the root path of the SourceRef.
    persistentClient : bool, default is Undefined, optional
        PersistentClient tells the controller to use a persistent Kubernetes
        client for this release. When enabled, the client will be reused for the
        duration of the reconciliation, instead of being created and destroyed
        for each (step of a).

        If not set, it defaults to true.
    prune : bool, default is Undefined, required
        Prune enables garbage collection.
    retryInterval : str, default is Undefined, optional
        The interval at which to retry a previously failed reconciliation.
        When not specified, the controller uses the KCLRunSpec.Interval
        value to retry failures.
    serviceAccountName : str, default is Undefined, optional
        The name of the Kubernetes service account to impersonate
        when reconciling this KCL source.
    sourceRef : KrmKclDevFluxcdV1alpha1KCLRunSpecSourceRef, default is Undefined, required
        source ref
    suspend : bool, default is Undefined, optional
        This flag tells the controller to suspend subsequent kustomize executions,
        it does not apply to already started executions. Defaults to false.
    targetNamespace : str, default is Undefined, optional
        TargetNamespace to target when performing operations for the KCL.
        Defaults to the namespace of the KCL source.
    timeout : str, default is Undefined, optional
        Timeout is the time to wait for any individual Kubernetes operation (like Jobs
        for hooks) during the performance. Defaults to '5m0s'.
    wait : bool, default is Undefined, optional
        Wait instructs the controller to check the health of all the reconciled
        resources. When enabled, the HealthChecks are ignored. Defaults to false.
    """


    argumentsReferences?: [KrmKclDevFluxcdV1alpha1KCLRunSpecArgumentsReferencesItems0]

    commonMetadata?: KrmKclDevFluxcdV1alpha1KCLRunSpecCommonMetadata

    config?: KrmKclDevFluxcdV1alpha1KCLRunSpecConfig

    dependsOn?: [KrmKclDevFluxcdV1alpha1KCLRunSpecDependsOnItems0]

    force?: bool = False

    healthChecks?: [KrmKclDevFluxcdV1alpha1KCLRunSpecHealthChecksItems0]

    interval: str

    kubeConfig?: KrmKclDevFluxcdV1alpha1KCLRunSpecKubeConfig

    path?: str

    persistentClient?: bool

    prune: bool

    retryInterval?: str

    serviceAccountName?: str

    sourceRef: KrmKclDevFluxcdV1alpha1KCLRunSpecSourceRef

    suspend?: bool

    targetNamespace?: str

    timeout?: str

    wait?: bool


    check:
        _regex_match(str(interval), r"^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$")
        _regex_match(str(retryInterval), r"^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$") if retryInterval
        len(serviceAccountName) <= 253 if serviceAccountName
        len(serviceAccountName) >= 1 if serviceAccountName
        len(targetNamespace) <= 63 if targetNamespace
        len(targetNamespace) >= 1 if targetNamespace
        _regex_match(str(timeout), r"^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$") if timeout


schema KrmKclDevFluxcdV1alpha1KCLRunSpecArgumentsReferencesItems0:
    r"""
    ArgumentReference contains a reference to a resource containing the KCL compile config.

    Attributes
    ----------
    kind : str, default is Undefined, required
        Kind of the values referent, valid values are ('Secret', 'ConfigMap').
    name : str, default is Undefined, required
        Name of the values referent. Should reside in the same namespace as the
        referring resource.
    optional : bool, default is Undefined, optional
        Optional indicates whether the referenced resource must exist, or whether to
        tolerate its absence. If true and the referenced resource is absent, proceed
        as if the resource was present but empty, without any variables defined.
    """


    kind: "Secret" | "ConfigMap"

    name: str

    optional?: bool = False


    check:
        len(name) <= 253
        len(name) >= 1


schema KrmKclDevFluxcdV1alpha1KCLRunSpecCommonMetadata:
    r"""
    CommonMetadata specifies the common labels and annotations that are
    applied to all resources. Any existing label or annotation will be
    overridden if its key matches a common one.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations to be added to the object's metadata.
    labels : {str:str}, default is Undefined, optional
        Labels to be added to the object's metadata.
    """


    annotations?: {str:str}

    labels?: {str:str}


schema KrmKclDevFluxcdV1alpha1KCLRunSpecConfig:
    r"""
    Config is the KCL compile config.

    Attributes
    ----------
    arguments : [str], default is Undefined, optional
        Arguments is the list of top level dynamic arguments for the kcl option function, e.g., env="prod"
    disableNone : bool, default is Undefined, optional
        DisableNone denotes running kcl and disable dumping None values.
    overrides : [str], default is Undefined, optional
        Overrides is the list of override paths and values, e.g., app.image="v2"
    pathSelectors : [str], default is Undefined, optional
        PathSelectors is the list of path selectors to select output result, e.g., a.b.c
    settings : [str], default is Undefined, optional
        Settings is the list of kcl setting files including all of the CLI config.
    showHidden : bool, default is Undefined, optional
        ShowHidden denotes output the hidden attribute in the result.
    sortKeys : bool, default is Undefined, optional
        SortKeys denotes sorting the output result keys, e.g., `{b = 1, a = 2} => {a = 2, b = 1}`.
    vendor : bool, default is Undefined, optional
        Vendor denotes running kcl in the vendor mode.
    """


    arguments?: [str]

    disableNone?: bool

    overrides?: [str]

    pathSelectors?: [str]

    settings?: [str]

    showHidden?: bool

    sortKeys?: bool

    vendor?: bool


schema KrmKclDevFluxcdV1alpha1KCLRunSpecDependsOnItems0:
    r"""
    NamespacedObjectReference contains enough information to locate the referenced Kubernetes resource object in any
    namespace.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referent.
    namespace : str, default is Undefined, optional
        Namespace of the referent, when not specified it acts as LocalObjectReference.
    """


    name: str

    namespace?: str


schema KrmKclDevFluxcdV1alpha1KCLRunSpecHealthChecksItems0:
    r"""
    NamespacedObjectKindReference contains enough information to locate the typed referenced Kubernetes resource object
    in any namespace.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent, if not specified the Kubernetes preferred version will be used.
    kind : str, default is Undefined, required
        Kind of the referent.
    name : str, default is Undefined, required
        Name of the referent.
    namespace : str, default is Undefined, optional
        Namespace of the referent, when not specified it acts as LocalObjectReference.
    """


    apiVersion?: str

    kind: str

    name: str

    namespace?: str


schema KrmKclDevFluxcdV1alpha1KCLRunSpecKubeConfig:
    r"""
    The KubeConfig for reconciling the controller on a remote cluster.
    When used in combination with `KCLRunSpec.ServiceAccountName`,
    forces the controller to act on behalf of that Service Account at the
    target cluster.
    If the --default-service-account flag is set, its value will be used as
    a controller level fallback for when `KCLRunSpec.ServiceAccountName`
    is empty.

    Attributes
    ----------
    secretRef : KrmKclDevFluxcdV1alpha1KCLRunSpecKubeConfigSecretRef, default is Undefined, required
        secret ref
    """


    secretRef: KrmKclDevFluxcdV1alpha1KCLRunSpecKubeConfigSecretRef


schema KrmKclDevFluxcdV1alpha1KCLRunSpecKubeConfigSecretRef:
    r"""
    SecretRef holds the name of a secret that contains a key with
    the kubeconfig file as the value. If no key is set, the key will default
    to 'value'.
    It is recommended that the kubeconfig is self-contained, and the secret
    is regularly updated if credentials such as a cloud-access-token expire.
    Cloud specific `cmd-path` auth helpers will not function without adding
    binaries and credentials to the Pod that is responsible for reconciling
    Kubernetes resources.

    Attributes
    ----------
    key : str, default is Undefined, optional
        Key in the Secret, when not specified an implementation-specific default key is used.
    name : str, default is Undefined, required
        Name of the Secret.
    """


    key?: str

    name: str


schema KrmKclDevFluxcdV1alpha1KCLRunSpecSourceRef:
    r"""
    Reference of the source where the kcl file is.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    kind : str, default is Undefined, required
        Kind of the referent.
    name : str, default is Undefined, required
        Name of the referent.
    namespace : str, default is Undefined, optional
        Namespace of the referent, defaults to the namespace of the Kubernetes
        resource object that contains the reference.
    """


    apiVersion?: str

    kind: "OCIRepository" | "GitRepository" | "Bucket"

    name: str

    namespace?: str


schema KrmKclDevFluxcdV1alpha1KCLRunStatus:
    r"""
    KCLRunStatus defines the observed state of KCLRun

    Attributes
    ----------
    conditions : [KrmKclDevFluxcdV1alpha1KCLRunStatusConditionsItems0], default is Undefined, optional
        conditions
    inventory : KrmKclDevFluxcdV1alpha1KCLRunStatusInventory, default is Undefined, optional
        inventory
    lastAppliedRevision : str, default is Undefined, optional
        The last successfully applied revision.
        Equals the Revision of the applied Artifact from the referenced Source.
    lastAttemptedRevision : str, default is Undefined, optional
        LastAttemptedRevision is the revision of the last reconciliation attempt.
    lastAttemptedRevisionDigest : str, default is Undefined, optional
        LastAttemptedRevisionDigest is the digest of the last reconciliation attempt.
        This is only set for OCIRepository sources.
    lastHandledReconcileAt : str, default is Undefined, optional
        LastHandledReconcileAt holds the value of the most recent
        reconcile request value, so a change of the annotation value
        can be detected.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the last reconciled generation.
    """


    conditions?: [KrmKclDevFluxcdV1alpha1KCLRunStatusConditionsItems0]

    inventory?: KrmKclDevFluxcdV1alpha1KCLRunStatusInventory

    lastAppliedRevision?: str

    lastAttemptedRevision?: str

    lastAttemptedRevisionDigest?: str

    lastHandledReconcileAt?: str

    observedGeneration?: int


schema KrmKclDevFluxcdV1alpha1KCLRunStatusConditionsItems0:
    r"""
    Condition contains details for one aspect of the current state of this API Resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition.
        This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition.
        Producers of specific condition types may define expected values and meanings for this field,
        and whether the values are considered a guaranteed API.
        The value should be a CamelCase string.
        This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0 if observedGeneration not in [None, Undefined]
        len(reason) <= 1024
        len(reason) >= 1
        _regex_match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        _regex_match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


schema KrmKclDevFluxcdV1alpha1KCLRunStatusInventory:
    r"""
    Inventory contains the list of Kubernetes resource object references that
    have been successfully applied.

    Attributes
    ----------
    entries : [KrmKclDevFluxcdV1alpha1KCLRunStatusInventoryEntriesItems0], default is Undefined, required
        Entries of Kubernetes resource object references.
    """


    entries: [KrmKclDevFluxcdV1alpha1KCLRunStatusInventoryEntriesItems0]


schema KrmKclDevFluxcdV1alpha1KCLRunStatusInventoryEntriesItems0:
    r"""
    ResourceRef contains the information necessary to locate a resource within a cluster.

    Attributes
    ----------
    id : str, default is Undefined, required
        ID is the string representation of the Kubernetes resource object's metadata,
        in the format '<namespace>_<name>_<group>_<kind>'.
    v : str, default is Undefined, required
        Version is the API version of the Kubernetes resource object's kind.
    """


    id: str

    v: str


